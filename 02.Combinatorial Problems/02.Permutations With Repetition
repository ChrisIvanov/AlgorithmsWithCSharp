using System;
using System.Collections.Generic;

namespace _02.PermutationsWithRepetition
{
    class Program
    {
        private static string[] elements;
        private static HashSet<string> permutations;
        static void Main(string[] args)
        {
            elements = Console.ReadLine().Split();
            permutations = new HashSet<string>();

            Permute(0);

            foreach (var result in permutations)
            {
                Console.WriteLine(result);
            }
        }

        private static void Permute(int permutationsIndex)
        {
            if (permutationsIndex >= elements.Length)
            {
                permutations.Add(string.Join(" ", elements));
                return;
            }

            Permute(permutationsIndex + 1);
            var swapped = new HashSet<string>();
            swapped.Add(elements[permutationsIndex]);

            for (int i = permutationsIndex; i < elements.Length; i++)
            {
                if (!swapped.Contains(elements[i]))
                {
                    Swap(permutationsIndex, i);
                    Permute(permutationsIndex + 1);
                    Swap(permutationsIndex, i);
                    swapped.Add(elements[i]);
                }
                
            }
        }

        private static void Swap(int first, int second)
        {
            var temp = elements[first];
            elements[first] = elements[second];
            elements[second] = temp;
        }
    }
}
