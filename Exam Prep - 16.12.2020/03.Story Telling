using System;
using System.Collections.Generic;
using System.Linq;

namespace _03.StoryTelling
{
    class Program
    {
        private static Dictionary<string, List<string>> graph;
        private static HashSet<string> visited;
        private static Stack<string> result;

        static void Main(string[] args)
        {
            graph = ReadGraph();
            visited = new HashSet<string>();
            result = new Stack<string>();

            foreach (var node in graph.Keys)
            {
                DFS(node);
            }

            Console.WriteLine(string.Join(" ", result));
        }

        private static void DFS(string node)
        {
            if (visited.Contains(node))
            {
                return;
            }

            visited.Add(node);

            foreach (var child in graph[node])
            {
                DFS(child);
            }

            result.Push(node);
        }

        private static Dictionary<string, List<string>> ReadGraph()
        {
            var result = new Dictionary<string, List<string>>();

            while (true)
            {
                var line = Console.ReadLine();

                if (line == "End")
                {
                    break;
                }

                var parts = line.Split("->", StringSplitOptions.RemoveEmptyEntries);
                var preStory = parts[0].Trim();

                if (!result.ContainsKey(preStory))
                {
                    result.Add(preStory, new List<string>());
                }

                if (parts.Length == 1)
                {
                    continue;
                }
                var postStories = parts[1].Trim().Split();


                result[preStory].AddRange(postStories);
            }

            return result;
        }
    }
}
