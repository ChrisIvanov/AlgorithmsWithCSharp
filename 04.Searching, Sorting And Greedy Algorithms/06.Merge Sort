using System;
using System.Linq;

namespace _06.Merge_Sort
{
    class Program
    {
        static void Main(string[] args)
        {
            var numbers = Console.ReadLine()
                .Split(" ")
                .Select(int.Parse)
                .ToArray();

            var sorted = MergeSort(numbers);

            Console.WriteLine(string.Join(" ", sorted));
        }

        private static int[] MergeSort(int[] numbers)
        {
            if (numbers.Length <= 1)
            {
                return numbers;
            }

            var left = numbers.Take(numbers.Length / 2).ToArray();
            var right = numbers.Skip(numbers.Length / 2).ToArray();

            return Merge(MergeSort(left), MergeSort(right));
        }

        private static int[] Merge(int[] left, int[] right)
        {
            var merged = new int[left.Length + right.Length];

            var mergedIdx = 0;
            var leftIdx = 0;
            var rightIdx = 0;

            while (leftIdx < left.Length && rightIdx < right.Length)
            {
                if (left[leftIdx] < right[rightIdx])
                {
                    merged[mergedIdx] = left[leftIdx];
                    leftIdx++;
                }
                else
                {
                    merged[mergedIdx] = right[rightIdx];
                    rightIdx++;
                }

                mergedIdx++;
            }

            while (leftIdx < left.Length)
            {
                merged[mergedIdx] = left[leftIdx];

                leftIdx++;
                mergedIdx++;
            }

            while (rightIdx < right.Length)
            {
                merged[mergedIdx] = right[rightIdx];

                rightIdx++;
                mergedIdx++;
            }

            return merged;
        }

        private static void Swap(int[] numbers, int first, int second)
        {
            var temp = numbers[first];
            numbers[first] = numbers[second];
            numbers[second] = temp;
        }
    }
}

